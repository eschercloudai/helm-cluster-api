---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "openstackcluster.labels" . | nindent 4 }}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        {{- range .Values.network.podCIDRs }}
        {{- printf "- %s" . | nindent 6 }}
        {{- end }}
    services:
      cidrBlocks:
        {{- range .Values.network.serviceCIDRs }}
        {{- printf "- %s" . | nindent 6 }}
        {{- end }}
    serviceDomain: "cluster.local"
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
    kind: OpenStackCluster
    name: {{ .Release.Name }}
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: {{ .Release.Name }}-control-plane
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
kind: OpenStackCluster
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "openstackcluster.labels" . | nindent 4 }}
spec:
  cloudName: {{ .Values.openstack.cloud }}
  identityRef:
    name: {{ .Release.Name }}-cloud-config
    kind: Secret
  apiServerLoadBalancer:
    enabled: true
  managedSecurityGroups: true
  nodeCidr: {{ .Values.network.nodeCIDR }}
  dnsNameservers:
    {{- range .Values.network.dnsNameservers}}
    {{- printf "- %s" . | nindent 2 }}
    {{- end }}
  externalNetworkId: {{ .Values.openstack.externalNetworkID }}
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "{{ .Release.Name }}-control-plane"
  labels:
    {{- include "openstackcluster.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controlPlane.replicas }}
  machineTemplate:
    infrastructureRef:
      kind: OpenStackMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
      name: "{{ .Release.Name }}-control-plane"
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        name: {{ "'{{ local_hostname }}'" }}
        kubeletExtraArgs:
          cloud-provider: openstack
          cloud-config: /etc/kubernetes/cloud.conf
    clusterConfiguration:
      imageRepository: k8s.gcr.io
      apiServer:
        extraArgs:
          cloud-provider: openstack
          cloud-config: /etc/kubernetes/cloud.conf
        extraVolumes:
        - name: cloud
          hostPath: /etc/kubernetes/cloud.conf
          mountPath: /etc/kubernetes/cloud.conf
          readOnly: true
      controllerManager:
        extraArgs:
          cloud-provider: openstack
          cloud-config: /etc/kubernetes/cloud.conf
        extraVolumes:
        - name: cloud
          hostPath: /etc/kubernetes/cloud.conf
          mountPath: /etc/kubernetes/cloud.conf
          readOnly: true
        - name: cacerts
          hostPath: /etc/certs/cacert
          mountPath: /etc/certs/cacert
          readOnly: true
    joinConfiguration:
      nodeRegistration:
        name: {{ "'{{ local_hostname }}'" }}
        kubeletExtraArgs:
          cloud-config: /etc/kubernetes/cloud.conf
          cloud-provider: openstack
    files:
    - path: /etc/kubernetes/cloud.conf
      owner: root
      permissions: "0600"
      content: {{ .Values.openstack.cloudProviderConfiguration }}
      encoding: base64
    - path: /etc/certs/cacert
      owner: root
      permissions: "0600"
      content: {{ .Values.openstack.ca }}
      encoding: base64
  version: "{{ .Values.kubernetes.version }}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
kind: OpenStackMachineTemplate
metadata:
  name: {{ .Release.Name }}-control-plane
  labels:
    {{- include "openstackcluster.labels" . | nindent 4 }}
spec:
  template:
    spec:
      flavor: {{ .Values.controlPlane.flavor }}
      image: {{ .Values.openstack.image }}
      sshKeyName: {{ .Values.openstack.sshKeyName }}
      cloudName: {{ .Values.openstack.cloud }}
      identityRef:
        name: {{ .Release.Name }}-cloud-config
        kind: Secret
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "{{ .Release.Name }}-md-0"
  labels:
    {{- include "openstackcluster.labels" . | nindent 4 }}
spec:
  clusterName: "{{ .Release.Name }}"
  replicas: {{ .Values.workload.replicas }}
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "{{ .Release.Name }}"
      version: "{{ .Values.kubernetes.version }}"
      failureDomain: {{ .Values.openstack.failureDomain }}
      bootstrap:
        configRef:
          name: "{{ .Release.Name }}-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "{{ .Release.Name }}-md-0"
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
        kind: OpenStackMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
kind: OpenStackMachineTemplate
metadata:
  name: {{ .Release.Name }}-md-0
  labels:
    {{- include "openstackcluster.labels" . | nindent 4 }}
spec:
  template:
    spec:
      cloudName: {{ .Values.openstack.cloud }}
      identityRef:
        name: {{ .Release.Name }}-cloud-config
        kind: Secret
      flavor: {{ .Values.workload.flavor }}
      image: {{ .Values.openstack.image }}
      sshKeyName: {{ .Values.openstack.sshKeyName }}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: {{ .Release.Name }}-md-0
  labels:
    {{- include "openstackcluster.labels" . | nindent 4 }}
spec:
  template:
    spec:
      files:
      - content: {{ .Values.openstack.cloudProviderConfiguration }}
        encoding: base64
        owner: root
        path: /etc/kubernetes/cloud.conf
        permissions: "0600"
      - content: {{ .Values.openstack.ca }}
        encoding: base64
        owner: root
        path: /etc/certs/cacert
        permissions: "0600"
      joinConfiguration:
        nodeRegistration:
          name: {{ "'{{ local_hostname }}'" }}
          kubeletExtraArgs:
            cloud-config: /etc/kubernetes/cloud.conf
            cloud-provider: openstack
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-cloud-config
  labels:
    {{- include "openstackcluster.labels" . | nindent 4 }}
    clusterctl.cluster.x-k8s.io/move: "true"
  annotations:
    # This needs to be preserved until the cluster has deprovisioned.
    # See: https://github.com/argoproj/argo-cd/issues/3211
    argocd.argoproj.io/sync-wave: "-1"
data:
  clouds.yaml: {{ .Values.openstack.cloudsYAML }}
  cacert: {{ .Values.openstack.ca }}
